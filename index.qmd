---
title: "Code Publishing Tutorial"
---

This tutorial covers how to make your code available to others.
It wraps up a series of tutorials which we recommend to go through in advance:

- [Introduction to version control with git and GitHub within RStudio](https://lmu-osc.github.io/Introduction-RStudio-Git-GitHub/):
  This tutorial explains how to set up a simple project with version control.
- [Collaborative coding with GitHub and RStudio](https://lmu-osc.github.io/Collaborative-RStudio-GitHub/):
  Here you can learn how to collaborate with others on code projects using GitHub.
- [Introduction to R](https://lmu-osc.github.io/introduction-to-R/):
  This is an introduction to the R programming language.
- [Introduction to `renv`](https://lmu-osc.github.io/introduction-to-renv/):
  Here you can learn how to manage the dependencies of an R project.
- [Introduction to Quarto](https://lmu-osc.github.io/introduction-to-Quarto/):
  Learn how to combine prose and code to make documents more reproducible.
- [Introduction to Zotero](https://lmu-osc.github.io/introduction-to-zotero/):
  Get introduced to the reference management software Zotero.
- [FAIR research data management](https://lmu-osc.github.io/FAIR-Data-Management/):
  Learn how to make your data findable, accessible, interoperable, and reusable.

While the general principles taught in this tutorial apply to most researchers
publishing code, we will make very specific suggestions what tools to use.

In particular, we will assume you have installed
[Git](https://git-scm.com/downloads),
[R](https://cloud.r-project.org/),
[RStudio](https://posit.co/download/rstudio-desktop/#:~:text=2%3A%20Install%20RStudio),
and [Quarto](https://quarto.org/docs/download/).
Windows users may additionally need
[RTools](https://cloud.r-project.org/bin/windows/Rtools/).

::: {#nte-quarto-alternatives .callout-note collapse="true"}
## Alternatives to Quarto

Quarto is a tool to render dynamic documents, but not the only one.

It is the successor of the R package [`rmarkdown`](https://rmarkdown.rstudio.com/)
and mostly backwards-compatible.
`rmarkdown` continues to be supported,
but the development of new features happens in Quarto.
The main difference is that Quarto has first-class support for Python.
In other words, Python users of Quarto do not need to have R installed.

While this tutorial focuses on Quarto,
you can also create reproducible research projects with the following tools:

- [Jupyter Book](https://jupyterbook.org/)
- [Stencila](https://stencila.io/)
- [Curvenote](https://curvenote.dev/)
- [showyourwork!](https://show-your.work/)
- [Org Mode](https://orgmode.org/)
- [StatTag](https://sites.northwestern.edu/stattag/)
:::

We will start with creating a simple report which incorporates R code.
Then, we will focus on what is required to publish your work:

- removing legal barriers: adding an appropriate license
- high-level documentation: creating a README file
- archival: uploading it to a repository

[Get started](intro.qmd){.btn .btn-lg .btn-success}